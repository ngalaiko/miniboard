// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sources_service.proto

package sources

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateSourceRequest struct {
	// Source to create.
	Source               *Source  `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSourceRequest) Reset()         { *m = CreateSourceRequest{} }
func (m *CreateSourceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSourceRequest) ProtoMessage()    {}
func (*CreateSourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e890b76b7a334d8, []int{0}
}

func (m *CreateSourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSourceRequest.Unmarshal(m, b)
}
func (m *CreateSourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSourceRequest.Marshal(b, m, deterministic)
}
func (m *CreateSourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSourceRequest.Merge(m, src)
}
func (m *CreateSourceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSourceRequest.Size(m)
}
func (m *CreateSourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSourceRequest proto.InternalMessageInfo

func (m *CreateSourceRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type Source struct {
	// Name of the source. For example "users/<id>/sources/<1>"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Url of an article or feed.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Raw is a base64 encoded raw source data.
	Raw                  []byte   `protobuf:"bytes,3,opt,name=raw,proto3" json:"raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e890b76b7a334d8, []int{1}
}

func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Source) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Source) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateSourceRequest)(nil), "app.miniboard.users.sources.api.v1.CreateSourceRequest")
	proto.RegisterType((*Source)(nil), "app.miniboard.users.sources.api.v1.Source")
}

func init() { proto.RegisterFile("sources_service.proto", fileDescriptor_8e890b76b7a334d8) }

var fileDescriptor_8e890b76b7a334d8 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0xce, 0x2f, 0x2d,
	0x4a, 0x4e, 0x2d, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x52, 0x4a, 0x2c, 0x28, 0xd0, 0xcb, 0xcd, 0xcc, 0xcb, 0x4c, 0xca, 0x4f, 0x2c, 0x4a,
	0xd1, 0x2b, 0x2d, 0x4e, 0x2d, 0x2a, 0xd6, 0x83, 0x2a, 0xd5, 0x4b, 0x2c, 0xc8, 0xd4, 0x2b, 0x33,
	0x94, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb,
	0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x98, 0xa0, 0x14, 0xc9, 0x25, 0xec, 0x5c,
	0x94, 0x9a, 0x58, 0x92, 0x1a, 0x0c, 0xd6, 0x15, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xe4,
	0xc4, 0xc5, 0x06, 0x31, 0x46, 0x82, 0x49, 0x81, 0x51, 0x83, 0xdb, 0x48, 0x4b, 0x8f, 0xb0, 0x4d,
	0x7a, 0x50, 0x23, 0xa0, 0x3a, 0x95, 0x1c, 0xb8, 0xd8, 0x20, 0x22, 0x42, 0x42, 0x5c, 0x2c, 0x79,
	0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x00, 0x17, 0x73,
	0x69, 0x51, 0x0e, 0xd8, 0x78, 0xce, 0x20, 0x10, 0x13, 0x24, 0x52, 0x94, 0x58, 0x2e, 0xc1, 0xac,
	0xc0, 0xa8, 0xc1, 0x13, 0x04, 0x62, 0x1a, 0xad, 0x67, 0xe4, 0xe2, 0x83, 0x18, 0x51, 0x1c, 0x0c,
	0xf1, 0xb7, 0xd0, 0x1c, 0x46, 0x2e, 0x1e, 0x64, 0x07, 0x0b, 0x99, 0x13, 0xe3, 0x32, 0x2c, 0x5e,
	0x94, 0x22, 0xc1, 0x4b, 0x4a, 0xea, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x52, 0x54, 0x12, 0x07, 0x87,
	0x62, 0x99, 0xa1, 0x3e, 0x58, 0xb1, 0xbe, 0x96, 0x3e, 0x54, 0xb9, 0x15, 0xd4, 0xcf, 0x4e, 0x9c,
	0x51, 0xec, 0x50, 0xa1, 0x24, 0x36, 0x70, 0x00, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x76,
	0x0f, 0xa9, 0x64, 0xbb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SourcesServiceClient is the client API for SourcesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SourcesServiceClient interface {
	// Create source
	//
	// Allows to create a new source for a user.
	CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...grpc.CallOption) (*Source, error)
}

type sourcesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSourcesServiceClient(cc grpc.ClientConnInterface) SourcesServiceClient {
	return &sourcesServiceClient{cc}
}

func (c *sourcesServiceClient) CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...grpc.CallOption) (*Source, error) {
	out := new(Source)
	err := c.cc.Invoke(ctx, "/app.miniboard.users.sources.api.v1.SourcesService/CreateSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SourcesServiceServer is the server API for SourcesService service.
type SourcesServiceServer interface {
	// Create source
	//
	// Allows to create a new source for a user.
	CreateSource(context.Context, *CreateSourceRequest) (*Source, error)
}

// UnimplementedSourcesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSourcesServiceServer struct {
}

func (*UnimplementedSourcesServiceServer) CreateSource(ctx context.Context, req *CreateSourceRequest) (*Source, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSource not implemented")
}

func RegisterSourcesServiceServer(s *grpc.Server, srv SourcesServiceServer) {
	s.RegisterService(&_SourcesService_serviceDesc, srv)
}

func _SourcesService_CreateSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SourcesServiceServer).CreateSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.miniboard.users.sources.api.v1.SourcesService/CreateSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SourcesServiceServer).CreateSource(ctx, req.(*CreateSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SourcesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.miniboard.users.sources.api.v1.SourcesService",
	HandlerType: (*SourcesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSource",
			Handler:    _SourcesService_CreateSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sources_service.proto",
}
