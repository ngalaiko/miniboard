syntax = "proto3";

package app.miniboard.users.articles.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/wrappers.proto";

option go_package = "articles";

service ArticlesService {
    // List articles
    //
    // An endpoint to list the user's articles.
    rpc ListArticles(ListArticlesRequest) returns (ListArticlesResponse) {}

    // Create article
    //
    // An endpoint to add an article for the user.
    rpc CreateArticle(CreateArticleRequest) returns (Article) {}

    // Update article
    //
    // An endpoint to update the article.
    rpc UpdateArticle(UpdateArticleRequest) returns (Article) {}

    // Get article
    //
    // An endpoint to get an article by id.
    rpc GetArticle(GetArticleRequest) returns (Article) {}

    // Delete article
    //
    // An endpoint to delete an article by id.
    rpc DeleteArticle(DeleteArticleRequest) returns (google.protobuf.Empty) {}
}

message ListArticlesRequest {
    // The maximum number of articles to return.
    int64 page_size = 1;

    // The next_page_token value returned from a previous List request, if any.
    string page_token = 2;

    // Filter by is_read field.
    google.protobuf.BoolValue is_read = 3;

    // Filter by is_favorite field.
    google.protobuf.BoolValue is_favorite = 4;

    // Filter by title field.
    google.protobuf.StringValue title = 5;

    // Filter by url field.
    google.protobuf.StringValue url = 6;
}

message ListArticlesResponse {
    // There will be a maximum number of articles returned based on the page_size field int the request.
    repeated Article articles = 1;

    // Token to retrieve the next page of results, or empty if there are no more results in the list.
    string next_page_token = 2;
}

message CreateArticleRequest {
    // Article to create.
    Article article = 1;
}

message UpdateArticleRequest {
    // The article resource which replaces the resource on the server.
    Article article = 1;

    // FieldMask of fields to update.
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;
}

message GetArticleRequest {
    // Name of the resource.
    string name = 1;

    // Specifies which parts of the article resource should be returned
    // in the response.
    ArticleView view = 2;
}

message DeleteArticleRequest {
    // Name of the resource to delete.
    string name = 1;
}

message Article {
    // Name of the resource, for example "users/user1/articles/article1".
    string name = 1;

    // Url of the article.
    string url = 2;

    // Title of the article.
    string title = 3;

    // Icon url.
    string icon_url = 4;

    // Time when article was added.&articles.List
    google.protobuf.Timestamp create_time = 5;

    // Readable content of the article.
    bytes content = 6;

    // Mark the article as read.
    bool is_read = 7;

    // Mark the article as favorite.
    bool is_favorite = 8;

    // Name of source website.
    string site_name = 9;
}

enum ArticleView {
    // Not specified, equivalent to BASIC.
    ARTICLE_VIEW_UNSPECIFIED = 0;

    // Server response does not include content field.
    // Default value.
    ARTICLE_VIEW_BASIC = 1;

    // Service response includes article's content.
    ARTICLE_VIEW_FULL = 2;
}
