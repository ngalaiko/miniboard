// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tokens_service.proto

package tokens

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateTokenRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTokenRequest) Reset()         { *m = CreateTokenRequest{} }
func (m *CreateTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTokenRequest) ProtoMessage()    {}
func (*CreateTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd6f19eda647de0b, []int{0}
}

func (m *CreateTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTokenRequest.Unmarshal(m, b)
}
func (m *CreateTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTokenRequest.Marshal(b, m, deterministic)
}
func (m *CreateTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTokenRequest.Merge(m, src)
}
func (m *CreateTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTokenRequest.Size(m)
}
func (m *CreateTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTokenRequest proto.InternalMessageInfo

func (m *CreateTokenRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd6f19eda647de0b, []int{1}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateTokenRequest)(nil), "app.miniboard.tokens.v1.CreateTokenRequest")
	proto.RegisterType((*Token)(nil), "app.miniboard.tokens.v1.Token")
}

func init() { proto.RegisterFile("tokens_service.proto", fileDescriptor_dd6f19eda647de0b) }

var fileDescriptor_dd6f19eda647de0b = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0xc9, 0xcf, 0x4e,
	0xcd, 0x2b, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x12, 0x4f, 0x2c, 0x28, 0xd0, 0xcb, 0xcd, 0xcc, 0xcb, 0x4c, 0xca, 0x4f, 0x2c, 0x4a, 0xd1,
	0x83, 0xa8, 0xd1, 0x2b, 0x33, 0x94, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c,
	0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x68, 0x53,
	0xd2, 0xe0, 0x12, 0x72, 0x2e, 0x4a, 0x4d, 0x2c, 0x49, 0x0d, 0x01, 0x69, 0x08, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x49, 0xce, 0x4f, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x64, 0xb9, 0x58, 0xc1, 0x6a, 0x84, 0x44, 0xb8, 0x58, 0xc1, 0xa6,
	0x43, 0x65, 0x21, 0x1c, 0xa3, 0x36, 0x46, 0x2e, 0x5e, 0xb0, 0x7c, 0x71, 0x30, 0xc4, 0x5d, 0x42,
	0xa5, 0x5c, 0xdc, 0x48, 0x46, 0x0b, 0x69, 0xeb, 0xe1, 0x70, 0xa1, 0x1e, 0xa6, 0x03, 0xa4, 0xe4,
	0x70, 0x2a, 0x06, 0x2b, 0x53, 0x92, 0x6c, 0xba, 0xfc, 0x64, 0x32, 0x93, 0xb0, 0x12, 0x1f, 0xd8,
	0x5b, 0x65, 0x86, 0xfa, 0x10, 0x05, 0x56, 0x8c, 0x5a, 0x4e, 0x1c, 0x51, 0x6c, 0x10, 0x4e, 0x12,
	0x1b, 0xd8, 0x8b, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x03, 0x6b, 0x16, 0x31, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TokensServiceClient is the client API for TokensService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokensServiceClient interface {
	// Create authorization token.
	//
	// Returns an authorization token.
	CreateToken(ctx context.Context, in *CreateTokenRequest, opts ...grpc.CallOption) (*Token, error)
}

type tokensServiceClient struct {
	cc *grpc.ClientConn
}

func NewTokensServiceClient(cc *grpc.ClientConn) TokensServiceClient {
	return &tokensServiceClient{cc}
}

func (c *tokensServiceClient) CreateToken(ctx context.Context, in *CreateTokenRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/app.miniboard.tokens.v1.TokensService/CreateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokensServiceServer is the server API for TokensService service.
type TokensServiceServer interface {
	// Create authorization token.
	//
	// Returns an authorization token.
	CreateToken(context.Context, *CreateTokenRequest) (*Token, error)
}

// UnimplementedTokensServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTokensServiceServer struct {
}

func (*UnimplementedTokensServiceServer) CreateToken(ctx context.Context, req *CreateTokenRequest) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateToken not implemented")
}

func RegisterTokensServiceServer(s *grpc.Server, srv TokensServiceServer) {
	s.RegisterService(&_TokensService_serviceDesc, srv)
}

func _TokensService_CreateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokensServiceServer).CreateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.miniboard.tokens.v1.TokensService/CreateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokensServiceServer).CreateToken(ctx, req.(*CreateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TokensService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.miniboard.tokens.v1.TokensService",
	HandlerType: (*TokensServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateToken",
			Handler:    _TokensService_CreateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tokens_service.proto",
}
