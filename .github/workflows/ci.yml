name: CI

on:
  push: {}

env:
  GO_VERSION: 1.16.3

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
        working-directory: backend


  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run tests
      run: |
        cd backend \
            && go test \
                -race \
                -coverprofile=coverage.out \
                -covermode=atomic \
                -v \
                ./...

    - name: Upload coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        working-directory: backend
        path-to-profile: coverage.out


  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [lint, test]
    strategy:
      matrix:
        app: [backend]
    steps:
    - uses: actions/checkout@v1

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    
    - name: Deploy
      run: |
        APP_ID="$(doctl apps list | grep miniboard-${{ matrix.app }} | awk '{print $1}')"
        doctl apps update --spec "deployment/digitalocean/${{ matrix.app }}.yaml" "$APP_ID"
        doctl apps create-deployment "${APP_ID}"
