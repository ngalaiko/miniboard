name: CI

on:
  push: {}

env:
  GO_VERSION: 1.14.2
  IMAGE_NAME: ghcr.io/ngalaiko/miniboard

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup golangci-lint
      env:
        VERSION: v1.23.7
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
         | sh -s -- -b "${GITHUB_WORKSPACE}/bin" ${VERSION}

    - name: Run lint
      run: |
        cd server && "${GITHUB_WORKSPACE}/bin/golangci-lint" run ./...


  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Run tests
      run: |
        cd server && go test -race -v ./...


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v1

    - name: Build image
      run: |
        docker build . \
            --build-arg GO_VERSION=${{ env.GO_VERSION }} \
            -t "${IMAGE_NAME}:${GITHUB_SHA}"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Push image
      run: |
        docker push "${IMAGE_NAME}:${GITHUB_SHA}"


  deploy:
    name: Deploy
    if: false #github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install Helm
      uses: azure/setup-helm@v1

    - name: Set up kubectl
      uses: matootie/dokube@v1.2.0
      with:
        personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
        clusterName: k8s-0
        expirationTime: 300

    - name: Apply Chart
      run: |
        cd .charts
        helm template miniboard \
          --set "Version=$(git rev-parse HEAD)" \
          | kubectl apply -f-

    - name: Wait for deployment
      run: |
         kubectl -n miniboard rollout status --watch --timeout 10m deployment miniboard
