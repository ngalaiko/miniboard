name: CI

on:
  push: {}

env:
  GO_VERSION: 1.15.6

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup golangci-lint
      env:
        VERSION: v1.23.7
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
         | sh -s -- -b "${GITHUB_WORKSPACE}/bin" ${VERSION}

    - name: Run lint
      run: |
        cd server && "${GITHUB_WORKSPACE}/bin/golangci-lint" run ./...


  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run tests
      run: |
        cd server && go test -race -v ./...


  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
    steps:
    - uses: actions/checkout@v2

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build binary for ${{ matrix.goos }} ${{ matrix.goarch }}
      run: |
          pwd
          ls
          ls server
          cd server
          ls
          ls cmd
          ls cmd/miniboard
          CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -o miniboard_${{ matrix.goos }}_${{ matrix.goarch }} \
            ./cmd/miniboard/main.go

    - uses: actions/upload-artifact@v2
      with:
        name: miniboard_${{ matrix.goos }}_${{ matrix.goarch }}
        path: server/miniboard_${{ matrix.goos }}_${{ matrix.goarch }}
        if-no-files-found: error
