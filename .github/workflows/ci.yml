name: CI

on:
  push: {}

env:
  GO_VERSION: 1.15.6

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup golangci-lint
      env:
        VERSION: v1.23.7
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
         | sh -s -- -b "${GITHUB_WORKSPACE}/bin" ${VERSION}

    - name: Run lint
      run: |
        cd server && "${GITHUB_WORKSPACE}/bin/golangci-lint" run ./...


  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up go ${{ env.GO_VERSION }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run tests
      run: |
        cd server && go test -race -v ./...

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v1

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    
    - name: Deploy
      run: |
        doctl apps update \
            --spec .do/app.yaml \
            $(doctl apps list | grep miniboard | awk '{print $1}')

