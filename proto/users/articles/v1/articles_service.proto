syntax = "proto3";

package app.miniboard.users.articles.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "articles";

service ArticlesService {
    // List articles
    //
    // An endpoint to list the user's articles.
    rpc ListArticles(ListArticlesRequest) returns (ListArticlesResponse) {
        option (google.api.http) = {
            get: "/api/v1/{parent=users/*}/articles"
        };
    }

    // Create article
    //
    // An endpoint to add an article for the user.
    rpc CreateArticle(CreateArticleRequest) returns (Article) {
        option (google.api.http) = {
            post: "/api/v1/{parent=users/*}/articles"
            body: "article"
        };
    }

    // Get article
    //
    // An endpoint to get an article by id.
    rpc GetArticle(GetArticleRequest) returns (Article) {
        option (google.api.http) = {
            get: "/api/v1/{name=users/*/articles/*}"
        };
    }

    // Delete article
    //
    // An endpoint to delete an article by id.
    rpc DeleteArticle(DeleteArticleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/{name=users/*/articles/*}"
        };
    }
}

message ListArticlesRequest {
    // Name of a user who owns articles.
    string parent = 1;

    // The maximum number of articles to return.
    int64 page_size = 2;

    // The next_page_token value returned from a previous List request, if any.
    string page_token = 3;
}

message ListArticlesResponse {
    // There will be a maximum number of articles returned based on the page_size field int the request.
    repeated Article articles = 1;

    // Token to retrieve the next page of results, or empty if there are no more results in the list.
    string next_page_token = 2;
}

message CreateArticleRequest {
    // Name of the owner.
    string parent = 1;
    // Article to create.
    Article article = 2;
}

message GetArticleRequest {
    // Name of the resource.
    string name = 1;
}

message DeleteArticleRequest {
    // Name of the resource to delete.
    string name = 1;
}

message Article {
    // Name of the resource, for example "users/user1/articles/article1".
    string name = 1;

    // Url of the article.
    string url = 2;

    // Title of the article.
    string title = 3;

    // Icon url.
    repeated string iconURL = 4;

    // Time when article was added.
    google.protobuf.Timestamp create_time = 5;
}
